(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{103:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return m}));var r=t(0),a=t.n(r);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=a.a.createContext({}),l=function(e){var n=a.a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=l(e.components);return a.a.createElement(u.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},b=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,c=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(t),b=r,m=p["".concat(o,".").concat(b)]||p[b]||d[b]||c;return t?a.a.createElement(m,i(i({ref:n},u),{},{components:t})):a.a.createElement(m,i({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var c=t.length,o=new Array(c);o[0]=b;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var u=2;u<c;u++)o[u]=t[u];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},93:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return i})),t.d(n,"toc",(function(){return s})),t.d(n,"default",(function(){return l}));var r=t(3),a=t(7),c=(t(0),t(103)),o={id:"docker",title:"Using Docker",sidebar_label:"Docker"},i={unversionedId:"learn/docker",id:"learn/docker",isDocsHomePage:!1,title:"Using Docker",description:"The fastest way to run Nuchain nodes apart from using prebuilt binaries is to use Docker. Here are",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/learn/docker.md",sourceDirName:"learn",slug:"/learn/docker",permalink:"/en/docs/learn/docker",editUrl:"https://github.com/nusantarachain/wiki/edit/master/docs/learn/docker.md",version:"current",sidebar_label:"Docker",frontMatter:{id:"docker",title:"Using Docker",sidebar_label:"Docker"},sidebar:"tutorialSidebar",previous:{title:"Become Validator",permalink:"/en/docs/learn/become-validator"},next:{title:"Nominator",permalink:"/en/docs/learn/nominator"}},s=[],u={toc:s};function l(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},u,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("p",null,"The fastest way to run Nuchain nodes apart from using prebuilt binaries is to use Docker. Here are\nsteps to run Nuchain Node using Docker."),Object(c.b)("p",null,"Pull the latest Nuchain docker image:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-bash"},"$ docker pull anvie/nuchain:latest\n")),Object(c.b)("p",null,"Run:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-bash"},"$ docker run --rm \\\n  -v '/var/data/nuchain:/data' \\\n  -p '9933:9933' \\\n  -p '9944:9944' \\\n  -p '30333:30333' \\\n   --name nuchain anvie/nuchain:latest \\\n   nuchain --base-path=/data\\\n   --ws-externals \\\n   --rpc-externals \\\n   --rpc-methods=Unsafe\n")),Object(c.b)("p",null,"If you want to run a docker container as a service, you can use the following systemd configuration:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre"},"# Systemd service configuration for Nuchain docker container.\n# edit as you wish.\n\n[Units]\nDescription=Nuchain Node Container\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nType=simple\nRestart=always\nRestartSec=5\nStartLimitBurst=5\nLimitNOFILE=10000\nExecStartPre=-/usr/bin/docker stop nuchain\nExecStartPre=-/usr/bin/docker rm nuchain\nExecStart=/usr/bin/docker run --rm -v '/var/data:/data' -p '9933:9933' -p '9944:9944' -p '30333:30333' --name nuchain anvie/ nuchain:latest nuchain --validator --base-path=/data --ws-external --rpc-external --rpc-methods=Unsafe\n\n[Install]\nWantedBy=multi-user.target\n")),Object(c.b)("p",null,"Save the above configuration to the file ",Object(c.b)("inlineCode",{parentName:"p"},"/etc/systemd/system/nuchain.service")," and type:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-bash"},"$ systemctl systemctl daemon-reload\n$ systemctl enable nuchain\n$ systemctl start nuchain\n")))}l.isMDXComponent=!0}}]);