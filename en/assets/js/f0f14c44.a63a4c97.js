(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{103:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return d}));var n=a(0),r=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=r.a.createContext({}),b=function(e){var t=r.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=b(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},h=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=b(a),h=n,d=s["".concat(c,".").concat(h)]||s[h]||u[h]||o;return a?r.a.createElement(d,i(i({ref:t},p),{},{components:a})):r.a.createElement(d,i({ref:t},p))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,c=new Array(o);c[0]=h;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,c[1]=i;for(var p=2;p<o;p++)c[p]=a[p];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,a)}h.displayName="MDXCreateElement"},99:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return i})),a.d(t,"toc",(function(){return l})),a.d(t,"default",(function(){return b}));var n=a(3),r=a(7),o=(a(0),a(103)),c={id:"become-validator",title:"Become Validator",sidebar_label:"Become Validator"},i={unversionedId:"learn/become-validator",id:"learn/become-validator",isDocsHomePage:!1,title:"Become Validator",description:"You must have a Nuchain account in order to become a validator. How to create an account can be found here.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/learn/become-validator.md",sourceDirName:"learn",slug:"/learn/become-validator",permalink:"/en/docs/learn/become-validator",editUrl:"https://github.com/nusantarachain/wiki/edit/master/docs/learn/become-validator.md",version:"current",sidebar_label:"Become Validator",frontMatter:{id:"become-validator",title:"Become Validator",sidebar_label:"Become Validator"},sidebar:"tutorialSidebar",previous:{title:"What is Validator",permalink:"/en/docs/learn/validator-basic"},next:{title:"Using Docker",permalink:"/en/docs/learn/docker"}},l=[{value:"Installing Nuchain Node",id:"installing-nuchain-node",children:[]},{value:"Connect",id:"connect",children:[]},{value:"Apply As Validator",id:"apply-as-validator",children:[]},{value:"Pruning",id:"pruning",children:[]},{value:"Presync Data",id:"presync-data",children:[]}],p={toc:l};function b(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"You must have a Nuchain account in order to become a validator. How to create an account can be found ",Object(o.b)("a",{parentName:"p",href:"/en/docs/learn/account"},"here"),"."),Object(o.b)("h2",{id:"installing-nuchain-node"},"Installing Nuchain Node"),Object(o.b)("p",null,"You can install Nuchain node on your server/computer by compiling the source code from the ",Object(o.b)("inlineCode",{parentName:"p"},"master")," ",Object(o.b)("em",{parentName:"p"},"branch")," in ",Object(o.b)("a",{parentName:"p",href:"https://github.com/nusantarachain/nuchain"},"repository")," or downloading the ",Object(o.b)("em",{parentName:"p"},"pre-built binary")," on the ","[releases]"," page (",Object(o.b)("a",{parentName:"p",href:"https://github.com/nusantarachain/nuchain/releases"},"https://github.com/nusantarachain/nuchain/releases"),")."),Object(o.b)("p",null,"If you want to install from source code, please follow the steps ",Object(o.b)("a",{parentName:"p",href:"https://github.com/nusantarachain/nuchain/blob/master/README.md#from-source-code"},"install from source code"),"."),Object(o.b)("p",null,"After you ",Object(o.b)("em",{parentName:"p"},"download")," from the ",Object(o.b)("a",{parentName:"p",href:"https://github.com/nusantarachain/nuchain/releases"},"releases"),", extract/unzip the zip file. Here is an example."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"$ unzip nuchain-0.1.3-3cb5203af-linux.zip\n")),Object(o.b)("p",null,"Run:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"$ ./nuchain --validator\n")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"NOTE:")," Run Nuchain as a service so that when the computer shuts down/restarts, Nuchain can run again automatically."),Object(o.b)("p",null,"The fastest way to run Nuchain node is to use ",Object(o.b)("a",{parentName:"p",href:"https://docker.com/"},"Docker"),", read how to use it ",Object(o.b)("a",{parentName:"p",href:"/en/docs/learn/docker"},"here"),"."),Object(o.b)("h2",{id:"connect"},"Connect"),Object(o.b)("p",null,"You need to link your account to the validator engine so that the Nuchain system knows where the ",Object(o.b)("em",{parentName:"p"},"rewards")," (as the results of the validator engine) will go. Here's how to connect a Nuchain account with the validator engine:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Get the session key from the validator engine that is already running:")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},'curl -H "Content-Type: application/json" -d \'{"id":1, "jsonrpc":"2.0", "method": "author_rotateKeys", "params":[]}\' http:// localhost:9933\n')),Object(o.b)("p",null,"The output you get is something like this:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},'{ "Jsonrpc": "2.0", "result": "0x2320085170b06281aedc2df4296d7b5042abcef201c57f2e55201f7aefc6af0c5ac19e74b674cb97913d54d63255dc18fbe88ad73392576130e00803c7082716147a5768a1c7f8708379649c0c9246b049699109c94b7d8957ebb813af62620464a70e69288323168afd69358746d684fc178eefac06aa9e94028a0f409a6d1a", "id": 1}\n')),Object(o.b)("p",null,"Copy the hex text in the ",Object(o.b)("em",{parentName:"p"},"field")," ",Object(o.b)("em",{parentName:"p"},"result")," starting with ",Object(o.b)("inlineCode",{parentName:"p"},"0x..."),". The text is the session key which will be needed at the registration/submission stage to become a validator."),Object(o.b)("h2",{id:"apply-as-validator"},"Apply As Validator"),Object(o.b)("p",null,"To apply as a validator, go to ",Object(o.b)("a",{parentName:"p",href:"https://nuchain.research.tech"},"Nuchain Dashboard"),". Go to the ",Object(o.b)("strong",{parentName:"p"},"Network")," menu > ",Object(o.b)("strong",{parentName:"p"},"Staking")," > ",Object(o.b)("strong",{parentName:"p"},"Account actions"),' then click the "',Object(o.b)("strong",{parentName:"p"},"+Validator"),'" button:'),Object(o.b)("p",null,Object(o.b)("img",{parentName:"p",src:"https://i.imgur.com/Gr1SNgD.png",alt:"Nuchain Validator"})),Object(o.b)("p",null,"Fill in the required data for the Staking process then click the ",Object(o.b)("strong",{parentName:"p"},"next")," button."),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"Paste")," the long hex text -- obtained from the previous step -- into the input ",Object(o.b)("em",{parentName:"p"},"Keys from rotateKeys"),":"),Object(o.b)("p",null,Object(o.b)("img",{parentName:"p",src:"https://i.imgur.com/pqUCE6X.png",alt:"Set Session Key"})),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"rewards commission percentage")," can be filled 100% to get all ",Object(o.b)("em",{parentName:"p"},"rewards")," for yourself (excluding ",Object(o.b)("em",{parentName:"p"},"nominators"),")."),Object(o.b)("p",null,"If you encounter any difficulties, please submit questions in the ","[Element]"," group(",Object(o.b)("a",{parentName:"p",href:"https://app.element.io/#/room/!aYWUxhUvutqbMBQIsN:matrix.org"},"https://app.element.io/#/room/!aYWUxhUvutqbMBQIsN:matrix.org"),") or ",Object(o.b)("a",{parentName:"p",href:"https://t.me/nusantarachain"},"Telegram")),Object(o.b)("h2",{id:"pruning"},"Pruning"),Object(o.b)("p",null,"When you become a validator, you don't have to store all existing block data. It is possible for the validator to store only the last few blocks of data so that its storage space is not highly consumed. This can be done by using the ",Object(o.b)("em",{parentName:"p"},"pruning")," feature. This feature allows the validator to run the engine without having to store the entire block from the begining; the validator may store only a few blocks based on the desired configuration. Activation of ",Object(o.b)("em",{parentName:"p"},"pruning")," mode is enough by adding the parameters ",Object(o.b)("inlineCode",{parentName:"p"},"--unsafe-pruning")," and ",Object(o.b)("inlineCode",{parentName:"p"},"--pruning=[NUMBER-BLOCK]"),". Example:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"nuchain --validator --unsafe-pruning --pruning=1000 ...\n")),Object(o.b)("p",null,"The above example command will run the validator with ",Object(o.b)("em",{parentName:"p"},"pruning")," 1000 or only keep the last 1000 blocks, the old blocks will be deleted."),Object(o.b)("p",null,"While using Pruning makes storage power more efficient, saving all blocks is recommended. Saving the entire block will maintain the ",Object(o.b)("em",{parentName:"p"},"history")," of transactions across the network."),Object(o.b)("h2",{id:"presync-data"},"Presync Data"),Object(o.b)("p",null,"When you become a new validator for the first time, the ",Object(o.b)("em",{parentName:"p"},"node")," will synchronize. This process will take quite a while when there are too many blocks. To speed up the sync process, you can download the following ",Object(o.b)("em",{parentName:"p"},"presync")," data:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"http://dmcd6hvaqrxz0.cloudfront.net/nuchain/presync-data/nuchain-snapshot-2021-05-09.7z"},"Nuchain Data 9 May 2021 full")," (6GB)"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"http://dmcd6hvaqrxz0.cloudfront.net/nuchain/presync-data/nuchain-snapshot-20210521-pruning1000-rocks.7z"},"Nuchain Data May 21, 2021 pruning 1000")," (993M)"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"https://drive.google.com/uc?export=download&id=1KT46PqnyRfvTeifEHFCG0tEEroMhT_f0"},"Nuchain Data July 23, 2021 pruning 1000")," (1.7GB)"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"http://dmcd6hvaqrxz0.cloudfront.net/nuchain/presync-data/nuchain-snapshot-20210421-full-rocks.7z"},"Nuchain Data April 14, 2021 full")," (2GB)")),Object(o.b)("p",null,"Extract the file using ",Object(o.b)("a",{parentName:"p",href:"https://www.7-zip.org/"},"7zip")," and point ",Object(o.b)("em",{parentName:"p"},"Nuchain node")," to the data using the ",Object(o.b)("inlineCode",{parentName:"p"},"--base-path")," parameter."))}b.isMDXComponent=!0}}]);